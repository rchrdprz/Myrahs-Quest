//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Actions/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Richie
{
    public partial class @PlayerInput : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""myrah"",
            ""id"": ""0f214ef5-41ef-417e-876c-67b9dd16735c"",
            ""actions"": [
                {
                    ""name"": ""left"",
                    ""type"": ""Button"",
                    ""id"": ""88e92166-0eed-4c01-b8c0-0739bf65db27"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""right"",
                    ""type"": ""Button"",
                    ""id"": ""bd3a28be-d181-4150-b6f2-ed5d22d22363"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""move"",
                    ""type"": ""Value"",
                    ""id"": ""d87979cb-499b-44dc-be0d-0befb1511534"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""0229260c-7f34-4e89-a658-8c5149f3c02b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""leftCtrl"",
                    ""type"": ""Button"",
                    ""id"": ""0eba5d11-e7e3-4209-9f41-ee33e7090298"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""w"",
                    ""type"": ""Button"",
                    ""id"": ""818fc543-6fc9-48a9-be5f-c8bdba6cd88e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""s"",
                    ""type"": ""Button"",
                    ""id"": ""ae3a9574-f1bb-44b0-8ab5-475c971709a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""6f98f5aa-7991-46e9-ac4d-a3c60afc4700"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tab"",
                    ""type"": ""Button"",
                    ""id"": ""ef2e3a29-ed83-429d-ae41-7aadbaf025cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bc020f98-c26d-47ed-af4d-fd5c94c522d0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6486639f-b9e8-4a7b-844a-d1d97c56c2b1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""804cd0c9-b976-474e-80f7-7d39c72ee6c1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8e470855-9c6d-45bd-9eb6-96fdcf970b04"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a761a6b7-c853-4582-b214-1c909306d938"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2a2f37df-e5fb-422a-9d34-7ef590606b1d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aa58aa77-c314-4d9d-82a4-a2ee570bae14"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""25375dc3-d2a5-48c5-8653-23a0284a2ffc"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""481a43dc-5ccc-496f-b4ca-3e7e3305a62c"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftCtrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a536947b-b40f-4a6e-83bb-936279efc546"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""w"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2d96915-1907-4c7b-91bb-5653d347c424"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""s"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fad9db2-ed36-453c-9eba-c53ad60b7901"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a95fc71c-122c-4afc-84d8-313578684af9"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // myrah
            m_myrah = asset.FindActionMap("myrah", throwIfNotFound: true);
            m_myrah_left = m_myrah.FindAction("left", throwIfNotFound: true);
            m_myrah_right = m_myrah.FindAction("right", throwIfNotFound: true);
            m_myrah_move = m_myrah.FindAction("move", throwIfNotFound: true);
            m_myrah_jump = m_myrah.FindAction("jump", throwIfNotFound: true);
            m_myrah_leftCtrl = m_myrah.FindAction("leftCtrl", throwIfNotFound: true);
            m_myrah_w = m_myrah.FindAction("w", throwIfNotFound: true);
            m_myrah_s = m_myrah.FindAction("s", throwIfNotFound: true);
            m_myrah_Esc = m_myrah.FindAction("Esc", throwIfNotFound: true);
            m_myrah_Tab = m_myrah.FindAction("Tab", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // myrah
        private readonly InputActionMap m_myrah;
        private IMyrahActions m_MyrahActionsCallbackInterface;
        private readonly InputAction m_myrah_left;
        private readonly InputAction m_myrah_right;
        private readonly InputAction m_myrah_move;
        private readonly InputAction m_myrah_jump;
        private readonly InputAction m_myrah_leftCtrl;
        private readonly InputAction m_myrah_w;
        private readonly InputAction m_myrah_s;
        private readonly InputAction m_myrah_Esc;
        private readonly InputAction m_myrah_Tab;
        public struct MyrahActions
        {
            private @PlayerInput m_Wrapper;
            public MyrahActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @left => m_Wrapper.m_myrah_left;
            public InputAction @right => m_Wrapper.m_myrah_right;
            public InputAction @move => m_Wrapper.m_myrah_move;
            public InputAction @jump => m_Wrapper.m_myrah_jump;
            public InputAction @leftCtrl => m_Wrapper.m_myrah_leftCtrl;
            public InputAction @w => m_Wrapper.m_myrah_w;
            public InputAction @s => m_Wrapper.m_myrah_s;
            public InputAction @Esc => m_Wrapper.m_myrah_Esc;
            public InputAction @Tab => m_Wrapper.m_myrah_Tab;
            public InputActionMap Get() { return m_Wrapper.m_myrah; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MyrahActions set) { return set.Get(); }
            public void SetCallbacks(IMyrahActions instance)
            {
                if (m_Wrapper.m_MyrahActionsCallbackInterface != null)
                {
                    @left.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnLeft;
                    @left.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnLeft;
                    @left.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnLeft;
                    @right.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnRight;
                    @right.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnRight;
                    @right.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnRight;
                    @move.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnMove;
                    @move.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnMove;
                    @move.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnMove;
                    @jump.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnJump;
                    @jump.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnJump;
                    @jump.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnJump;
                    @leftCtrl.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnLeftCtrl;
                    @leftCtrl.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnLeftCtrl;
                    @leftCtrl.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnLeftCtrl;
                    @w.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnW;
                    @w.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnW;
                    @w.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnW;
                    @s.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnS;
                    @s.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnS;
                    @s.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnS;
                    @Esc.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnEsc;
                    @Esc.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnEsc;
                    @Esc.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnEsc;
                    @Tab.started -= m_Wrapper.m_MyrahActionsCallbackInterface.OnTab;
                    @Tab.performed -= m_Wrapper.m_MyrahActionsCallbackInterface.OnTab;
                    @Tab.canceled -= m_Wrapper.m_MyrahActionsCallbackInterface.OnTab;
                }
                m_Wrapper.m_MyrahActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @left.started += instance.OnLeft;
                    @left.performed += instance.OnLeft;
                    @left.canceled += instance.OnLeft;
                    @right.started += instance.OnRight;
                    @right.performed += instance.OnRight;
                    @right.canceled += instance.OnRight;
                    @move.started += instance.OnMove;
                    @move.performed += instance.OnMove;
                    @move.canceled += instance.OnMove;
                    @jump.started += instance.OnJump;
                    @jump.performed += instance.OnJump;
                    @jump.canceled += instance.OnJump;
                    @leftCtrl.started += instance.OnLeftCtrl;
                    @leftCtrl.performed += instance.OnLeftCtrl;
                    @leftCtrl.canceled += instance.OnLeftCtrl;
                    @w.started += instance.OnW;
                    @w.performed += instance.OnW;
                    @w.canceled += instance.OnW;
                    @s.started += instance.OnS;
                    @s.performed += instance.OnS;
                    @s.canceled += instance.OnS;
                    @Esc.started += instance.OnEsc;
                    @Esc.performed += instance.OnEsc;
                    @Esc.canceled += instance.OnEsc;
                    @Tab.started += instance.OnTab;
                    @Tab.performed += instance.OnTab;
                    @Tab.canceled += instance.OnTab;
                }
            }
        }
        public MyrahActions @myrah => new MyrahActions(this);
        public interface IMyrahActions
        {
            void OnLeft(InputAction.CallbackContext context);
            void OnRight(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnLeftCtrl(InputAction.CallbackContext context);
            void OnW(InputAction.CallbackContext context);
            void OnS(InputAction.CallbackContext context);
            void OnEsc(InputAction.CallbackContext context);
            void OnTab(InputAction.CallbackContext context);
        }
    }
}
